pipeline {
    agent any
    
    tools {
        nodejs 'Node_JS'   
    }
    
    environment {
        DOCKER_BUILDKIT = '1'
        APP_NAME = 'naila-arts'
        DOCKER_IMAGE_FRONTEND = "${APP_NAME}:frontend-${BUILD_NUMBER}"
        DOCKER_IMAGE_BACKEND = "${APP_NAME}:backend-${BUILD_NUMBER}"
        HUB_REPOSITORY = 'naila-arts'
        HUB_USERNAME = 'harisdux'
        VPS_IP = '31.220.109.115'
    }
    
    stages {
        stage('Verify Prerequisites') {
            steps {
                script {
                    // Check Docker installation and permissions
                    sh '''                     
                        
                        # Ensure Docker daemon is running
                        if ! docker info >/dev/null 2>&1; then
                            echo "Docker daemon is not running. Please start Docker service."
                            exit 1
                        fi
                        
                        # Display versions for logging
                        echo "Docker version:"
                        docker --version
                        
                        echo "Node version:"
                        node --version
                        
                        echo "NPM version:"
                        npm --version
                    '''
                }
            }
        }
        
        // stage('Install Dependencies') {
        //     steps {
        //         script {
        //             sh '''
        //                 cd frontend && npm cache clean --force && npm install --legacy-peer-deps
        //                 cd ../
        //                 cd backend && npm install 
                       
        //             '''
        //         }
        //     }
        // }
        
        // stage('Build React App') {
        //     steps {
        //         script {
        //             sh '''
        //                 cd frontend && npm run build
        //             '''
        //         }
        //     }
        // }
        
       stage('Docker Build & Deploy') {
          steps {
        script {
          
            withCredentials([string(credentialsId: 'DOCKERHUB_TOKEN', variable: 'DOCKERHUB_PAT')]) {
                sh """
                    echo "Logging into Docker Hub"
                    echo '${DOCKERHUB_PAT}' | docker login -u ${HUB_USERNAME} --password-stdin

                       echo "Building frontend image"
                            docker build -t ${DOCKER_IMAGE_FRONTEND} -f frontend/Dockerfile frontend
                                # Push the frontend-image
                            docker push ${HUB_REPOSITORY}/${DOCKER_IMAGE_FRONTEND}
                            
                        echo "Building backend image"
                            docker build -t ${DOCKER_IMAGE_BACKEND} -f backend/Dockerfile backend
                                # Push the backend-image
                            docker push ${HUB_REPOSITORY}/${DOCKER_IMAGE_BACKEND}
                """
            }

        }
    }
}




    }
    
    post {
        always {
            // Clean workspace
            cleanWs()
        }
        success {
            script {
                sh """
                    echo "Deployment successful!"                 
                """
            }
        }
        failure {
            script {
                sh """
                    echo "Deployment failed!"
                """
            }
        }
    }
}